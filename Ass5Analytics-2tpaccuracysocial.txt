import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

data=pd.read_csv("Social_Network_Ads.csv")
df=pd.DataFrame(data)
df

df.head

df.isnull().sum()

x= df.iloc[:, [2,3]].values
y= df.iloc[: ,4].values
print(x[:3,:])
print('-'*15)
print(y[:3])

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test=train_test_split(x, y, test_size=0.25, random_state=0)
print(x_train[:3])
print('-'*15)
print(y_train[:3])
print('-'*15)
print(x_test[:3])
print('-'*15)
print(y_test[:3])
print('-'*15)

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
x_train=sc.fit_transform(x_train)
x_test=sc.transform(x_test)
print(x_train[:3])
print('-'*15)
print(x_test[:3])

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state=0)
classifier.fit(x_train, y_train)

y_pred = classifier.predict(x_test)
print(x_test[:10])
print('-'*15)
print(y_pred[:10])

print(y_pred[:20])
print(y_test[:20])

from sklearn.metrics import confusion_matrix, classification_report
cm = confusion_matrix(y_test, y_pred)
print(cm)

cl_report=classification_report(y_test,y_pred)
cl_report

or

from sklearn.metrics import accuracy_score
accuracy=accuracy_score(y_test,y_pred)
print('Accuracy: ',accuracy)
Error_rate=1-accuracy
print('Error rate: ',Error_rate)

from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
precision=precision_score(y_test,y_pred)
recall=recall_score(y_test,y_pred)
print('Precision: ',precision)
print('Recall: ',recall)