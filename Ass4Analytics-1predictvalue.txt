import pandas as pd
import numpy as np

from sklearn.datasets import load_boston
boston_dataset = load_boston()

boston = pd.DataFrame(boston_dataset.data, columns=boston_dataset.feature_names)
boston.head()

boston['MEDV'] = boston_dataset.target

boston.isnull().sum()

X = pd.DataFrame(np.c_[boston['LSTAT'], boston['RM']], columns = ['LSTAT','RM'])
Y = boston['MEDV']

from sklearn.linear_model import LinearRegression

reg = LinearRegression()

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.33, random_state=42)
reg.fit(x_train, y_train)

print(reg.coef_)

y_pred = reg.predict(x_test)
print(y_pred)

y_pred[2]
y_test[0]

print(np.mean((y_pred-y_test)**2)) #by numpy

from sklearn.metrics import mean_squared_error #by sklearn
print(mean_squared_error(y_test, y_pred))